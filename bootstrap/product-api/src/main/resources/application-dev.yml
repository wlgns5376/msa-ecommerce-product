spring:
  # 개발 환경 데이터베이스 설정
  datasource:
    url: jdbc:h2:mem:devdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver
  
  # H2 콘솔 활성화
  h2:
    console:
      enabled: true
      path: /h2-console
  
  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
  
  # Redis 설정 (개발 환경에서는 비활성화)
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
  
  # Kafka 설정 (개발 환경에서는 비활성화)
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:}
  
  # Autoconfigure 비활성화 (개발 환경)
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration
      - org.springframework.boot.actuate.autoconfigure.data.redis.RedisHealthContributorAutoConfiguration
      - org.springframework.boot.actuate.autoconfigure.data.redis.RedisReactiveHealthContributorAutoConfiguration
      - org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration
      - org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration
        
# Eureka 비활성화
eureka:
  client:
    enabled: false
    register-with-eureka: false
    fetch-registry: false
        
# 개발 환경 로깅
logging:
  level:
    com.commerce.product: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.security: DEBUG