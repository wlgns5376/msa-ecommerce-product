name: Test Coverage Report

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pull-requests: write
      issues: write
      checks: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Run tests with JaCoCo
      run: ./gradlew testAll jacocoRootReport
    
    - name: Debug JaCoCo Reports
      run: |
        echo "=== Finding all CSV files ==="
        find . -name "*.csv" -type f | grep -i jacoco || echo "No JaCoCo CSV files found"
        echo "=== Checking build directory ==="
        ls -la build/reports/jacoco/jacocoRootReport/ || echo "jacocoRootReport directory not found"
        echo "=== Current working directory ==="
        pwd
    
    - name: Create Maven-compatible directory structure
      run: |
        mkdir -p target/site/jacoco
        if [ -f build/reports/jacoco/jacocoRootReport/jacocoRootReport.csv ]; then
          cp build/reports/jacoco/jacocoRootReport/jacocoRootReport.csv target/site/jacoco/jacoco.csv
          echo "CSV report copied to target/site/jacoco/jacoco.csv"
          ls -la target/site/jacoco/
        else
          echo "ERROR: CSV report not found at build/reports/jacoco/jacocoRootReport/jacocoRootReport.csv"
          exit 1
        fi
        if [ -f build/reports/jacoco/jacocoRootReport/jacocoRootReport.xml ]; then
          cp build/reports/jacoco/jacocoRootReport/jacocoRootReport.xml target/site/jacoco/jacoco.xml
          echo "XML report copied to target/site/jacoco/jacoco.xml"
        else
          echo "ERROR: XML report not found at build/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
          exit 1
        fi
    
    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2
      with:
        generate-branches-badge: true
        generate-summary: true
        jacoco-csv-file: target/site/jacoco/jacoco.csv
    
    - name: Log coverage percentages
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branches = ${{ steps.jacoco.outputs.branches }}"
    
    - name: JaCoCo Report
      id: jacoco-report
      uses: madrapps/jacoco-report@v1.6.1
      continue-on-error: true
      with:
        paths: |
          ${{ github.workspace }}/build/reports/jacoco/jacocoRootReport/jacocoRootReport.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        min-coverage-overall: 70
        min-coverage-changed-files: 70
        title: 'JaCoCo Test Coverage Report'
        update-comment: true
        skip-if-no-changes: true
        pass-emoji: '‚úÖ'
        fail-emoji: '‚ùå'
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-reports
        path: |
          build/reports/jacoco/jacocoRootReport/html/
          **/build/reports/jacoco/test/html/
        retention-days: 7
    
    - name: Check coverage threshold
      run: ./gradlew jacocoTestCoverageVerification
      continue-on-error: true
    
    - name: Comment PR with coverage
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const coverage = '${{ steps.jacoco.outputs.coverage }}';
          const branches = '${{ steps.jacoco.outputs.branches }}';
          
          const comment = `## Test Coverage Report üìä
          
          | Metric | Coverage |
          |--------|----------|
          | Lines | ${coverage}% |
          | Branches | ${branches}% |
          
          ‚úÖ Minimum coverage threshold: 70%
          
          View detailed report in the [Actions artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });